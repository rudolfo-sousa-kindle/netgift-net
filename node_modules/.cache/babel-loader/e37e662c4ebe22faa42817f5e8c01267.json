{"ast":null,"code":"import $ from 'jquery';\nimport Masonry from \"masonry-layout\";\nimport Isotope from \"isotope-layout\";\nexport function setMasonry() {\n  if ($('.usuarios').length > 0) {\n    var grid = document.querySelector('.grid-festas');\n    var $gridFestas = new Masonry(grid, {\n      itemSelector: '.box-festas',\n      gutter: 55,\n      horizontalOrder: true,\n      columnWidth: '.box-festas-sizer',\n      percentPosition: true\n    });\n    $gridFestas = new Masonry('layout');\n  } //MANSORY CARDS LISTA DE CONVIDADOS\n\n\n  if ($('.list-cards').length >= 1) {\n    var listCards = document.querySelector('.list-cards');\n    var cards = new Isotope(listCards, {\n      masonry: {\n        itemSelector: '.card-convidados',\n        gutter: 5,\n        horizontalOrder: true,\n        columnWidth: '.card-convidados-sizer',\n        percentPosition: true\n      }\n    });\n    $('.badges-filter').click(function () {\n      var filterValue = $(this).attr('data-filter');\n\n      if (filterValue === 'todos') {\n        console.log(filterValue);\n        return new Isotope(listCards, {\n          filter: '*'\n        });\n      } else if (filterValue === 'confirmados') {\n        console.log(filterValue);\n        return new Isotope(listCards, {\n          filter: '.card.card-convidados.confirmado'\n        });\n      } else if (filterValue === 'respondeu') {\n        return new Isotope(listCards, {\n          filter: '.Não.respondeu.card.card-convidados'\n        });\n      } else {\n        return new Isotope(listCards, {\n          filter: '.card.card-convidados.nao-comparecera'\n        });\n      }\n    });\n  } // var $grid = $('.cards').isotope({\n  //     // options\n  //     masonry: {\n  //         columnWidth: '.grid-sizer',\n  //         itemSelector: '.card',\n  //         gutter: 15,\n  //         fitWidth: true\n  //     }\n  // });\n  // filter items on button click\n\n}\nexport function reloadUsuariosCard() {\n  if ($('.usuarios').length > 0) {\n    var grid = document.querySelector('.grid-festas');\n    var $gridFestas = new Masonry(grid, {\n      itemSelector: '.box-festas',\n      gutter: 55,\n      horizontalOrder: true,\n      columnWidth: '.box-festas-sizer',\n      percentPosition: true\n    });\n    $gridFestas = new Masonry('layout');\n  }\n\n  if ($(\"body\").hasClass(\"usuarios\")) {\n    if ($(\".dashboard\").hasClass(\"aside-active\")) {\n      setTimeout(function () {\n        $gridFestas = new Masonry('layout');\n        $gridFestas = new Masonry({\n          gutter: 38\n        });\n      }, 350);\n    } else {\n      setTimeout(function () {\n        $gridFestas = new Masonry('layout');\n        $gridFestas = new Masonry({\n          gutter: 55\n        });\n      }, 350);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/assets/js/setMasonry.js"],"names":["$","Masonry","Isotope","setMasonry","length","grid","document","querySelector","$gridFestas","itemSelector","gutter","horizontalOrder","columnWidth","percentPosition","listCards","cards","masonry","click","filterValue","attr","console","log","filter","reloadUsuariosCard","hasClass","setTimeout"],"mappings":"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","sourcesContent":["import $ from 'jquery';\nimport Masonry from \"masonry-layout\";\nimport Isotope from \"isotope-layout\";\n\nexport function setMasonry(){\n\n    if ($('.usuarios').length > 0) {\n        var grid = document.querySelector('.grid-festas');\n        var $gridFestas = new Masonry( grid, {\n            itemSelector: '.box-festas',\n            gutter: 55,\n            horizontalOrder: true,\n            columnWidth: '.box-festas-sizer',\n            percentPosition: true\n        });\n        $gridFestas = new Masonry('layout');\n\n    }\n\n    //MANSORY CARDS LISTA DE CONVIDADOS\n    if ($('.list-cards').length >= 1) {\n        var listCards = document.querySelector('.list-cards');\n        var cards = new Isotope( listCards, {\n            masonry: {\n                itemSelector: '.card-convidados',\n                gutter: 5,\n                horizontalOrder: true,\n                columnWidth: '.card-convidados-sizer',\n                percentPosition: true\n            },\n        });\n\n        $('.badges-filter').click(function() {\n            var filterValue = $(this).attr('data-filter');\n\n            if (filterValue === 'todos') {\n                console.log(filterValue);\n                return new Isotope( listCards, {\n                    filter: '*'\n                });\n            } else if (filterValue === 'confirmados') {\n                console.log(filterValue);\n                return new Isotope( listCards, {\n                    filter: '.card.card-convidados.confirmado',\n                });\n            } else if (filterValue === 'respondeu') {\n                return new Isotope( listCards, {\n                    filter: '.Não.respondeu.card.card-convidados',\n                });\n            } else {\n                return new Isotope( listCards, {\n                    filter: '.card.card-convidados.nao-comparecera',\n                });\n            }\n        })\n    }\n\n    // var $grid = $('.cards').isotope({\n    //     // options\n\n    //     masonry: {\n    //         columnWidth: '.grid-sizer',\n    //         itemSelector: '.card',\n    //         gutter: 15,\n    //         fitWidth: true\n\n    //     }\n    // });\n\n    // filter items on button click\n}\n\nexport function reloadUsuariosCard() {\n    if ($('.usuarios').length > 0) {\n        var grid = document.querySelector('.grid-festas');\n        var $gridFestas = new Masonry( grid, {\n            itemSelector: '.box-festas',\n            gutter: 55,\n            horizontalOrder: true,\n            columnWidth: '.box-festas-sizer',\n            percentPosition: true\n        });\n        $gridFestas = new Masonry('layout');\n\n    }\n    \n    if ($(\"body\").hasClass(\"usuarios\")) {\n        if ($(\".dashboard\").hasClass(\"aside-active\")) {\n            setTimeout(function () {\n                $gridFestas = new Masonry('layout');\n                $gridFestas = new Masonry({\n                    gutter: 38\n                });\n                \n            }, 350);\n        } else {\n            setTimeout(function () {\n                $gridFestas = new Masonry('layout');\n                $gridFestas = new Masonry({\n                    gutter: 55\n                });\n            }, 350);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}