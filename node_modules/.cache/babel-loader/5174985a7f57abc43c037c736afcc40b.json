{"ast":null,"code":"import axios from \"axios\";\nimport { textAlign } from \"../components/styleFunctions\";\nconst URL = \"http://51.15.99.120:4700\";\nconst urlWP = \"http://www.localkindle.com.br/netgift_api/wp-json/ntgift/api\";\nexport const FETCH_THEMES_BEGIN = 'FETCH_THEMES_BEGIN';\nexport const FETCH_THEMES_SUCCESS = 'FETCH_THEMES_SUCCESS';\nexport const FETCH_THEME_SUCCESS = 'FETCH_THEME_SUCCESS';\nexport const FETCH_THEMES_FAILURE = 'FETCH_THEMES_FAILURE';\nexport function addThemes(values, history) {\n  return async dispatch => {\n    var titulo_header_bold;\n    var titulo_header_itallic;\n    var titulo_header_underline;\n    var titulo_header_align;\n    var titulo_header_fontStyle;\n    var titulo_header_fontSize;\n    var titulo_header_fontColor;\n    var titulo_header_bgColor;\n    var categoria; // if(values.tema_categoria == null || values.tema_categoria == \"\"){\n    //   categoria = 1\n    // }else{\n\n    categoria = values.tema_categoria; // }\n    // if(values.titulo_header_bold == null || values.titulo_header_bold == \"\"){\n    //   titulo_header_bold = false;\n    // }else{\n\n    titulo_header_bold = true; // }\n    // if(values.titulo_header_itallic == null || values.titulo_header_itallic == \"\"){\n    //   titulo_header_itallic = false;\n    // }else{\n\n    titulo_header_itallic = true; // }\n    // if(values.titulo_header_underline == null || values.titulo_header_underline == \"\"){\n    //   titulo_header_underline = false;\n    // }else{\n\n    titulo_header_underline = true; // }\n    // if(values.titulo_header_titulo_header_align == null || values.titulo_header_titulo_header_align == \"\"){\n    //   titulo_header_align = \"center\";\n    // }\n    // if(values.titulo_header_fontStyle == null || values.titulo_header_fontStyle == \"\"){\n    //   titulo_header_fontStyle = \"Museo Sans\";\n    // }\n    // if(values.titulo_header_fontSize == null || values.titulo_header_fontSize == \"\"){\n    //   titulo_header_fontSize = \"48\";\n    // }\n    // if(values.titulo_header_fontColor == null || values.titulo_header_fontColor == \"\"){\n    //   titulo_header_fontColor = \"#000000\";\n    // }\n    // if(values.titulo_header_bgColor == null || values.titulo_header_bgColor == \"\"){\n    //   titulo_header_bgColor = \"#000000\";\n    // }\n\n    console.log(titulo_header_fontStyle);\n    axios.post(\"\".concat(URL, \"/theme\"), {\n      \"name\": values.nome_tema,\n      \"description\": values.descricao_tema,\n      \"category_id\": categoria\n    }).then(res => {\n      axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n        \"theme_ss_id\": 1,\n        \"theme_feature_id\": 1,\n        \"value\": titulo_header_bold\n      }).then(res => {\n        axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n          \"theme_ss_id\": 1,\n          \"theme_feature_id\": 2,\n          \"value\": titulo_header_itallic\n        }).then(res => {\n          axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n            \"theme_ss_id\": 1,\n            \"theme_feature_id\": 3,\n            \"value\": titulo_header_underline\n          }).then(res => {\n            axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n              \"theme_ss_id\": 1,\n              \"theme_feature_id\": 4,\n              \"value\": titulo_header_align\n            }).then(response => {\n              axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n                \"theme_ss_id\": 1,\n                \"theme_feature_id\": 5,\n                \"value\": titulo_header_fontStyle\n              }).then(res => {\n                axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n                  \"theme_ss_id\": 1,\n                  \"theme_feature_id\": 6,\n                  \"value\": titulo_header_fontSize\n                }).then(res => {\n                  axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n                    \"theme_ss_id\": 1,\n                    \"theme_feature_id\": 7,\n                    \"value\": titulo_header_fontColor\n                  }).then(res => {\n                    axios.post(\"\".concat(URL, \"/theme/\") + res.data.id + \"/config\", {\n                      \"theme_ss_id\": 1,\n                      \"theme_feature_id\": 8,\n                      \"value\": titulo_header_bgColor\n                    }).then(res => {\n                      console.log(res);\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  };\n}\nexport const fetchThemesBegin = () => ({\n  type: FETCH_THEMES_BEGIN\n});\nexport const fetchThemesSuccess = themes => ({\n  type: FETCH_THEMES_SUCCESS,\n  payload: {\n    themes\n  }\n});\nexport const fetchThemeSuccess = theme => ({\n  type: FETCH_THEME_SUCCESS,\n  payload: {\n    theme\n  }\n});\nexport const fetchThemesFailure = error => ({\n  type: FETCH_THEMES_FAILURE,\n  payload: {\n    error\n  }\n});\nexport function fetchThemes() {\n  return dispatch => {\n    dispatch(fetchThemesBegin());\n    return axios.post(\"\".concat(URL, \"/theme/search\"), {\n      \"busca\": \"\"\n    }).then(response => {\n      var data = response.data;\n      dispatch(fetchThemesSuccess(data[0]));\n      return data;\n    }).catch(error => dispatch(fetchThemesFailure(error)));\n  };\n}\nexport function fetchTheme(id) {\n  return dispatch => {\n    dispatch(fetchThemesBegin());\n    return axios.get(\"\".concat(URL, \"/theme/\") + id + \"/config\").then(response => {\n      var data = response.data;\n      dispatch(fetchThemeSuccess(data));\n      return data;\n    }).catch(error => dispatch(fetchThemesFailure(error)));\n  };\n}","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/actions/themesActions.js"],"names":["axios","textAlign","URL","urlWP","FETCH_THEMES_BEGIN","FETCH_THEMES_SUCCESS","FETCH_THEME_SUCCESS","FETCH_THEMES_FAILURE","addThemes","values","history","dispatch","titulo_header_bold","titulo_header_itallic","titulo_header_underline","titulo_header_align","titulo_header_fontStyle","titulo_header_fontSize","titulo_header_fontColor","titulo_header_bgColor","categoria","tema_categoria","console","log","post","nome_tema","descricao_tema","then","res","data","id","response","fetchThemesBegin","type","fetchThemesSuccess","themes","payload","fetchThemeSuccess","theme","fetchThemesFailure","error","fetchThemes","catch","fetchTheme","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { textAlign } from \"../components/styleFunctions\";\nconst URL   = \"http://51.15.99.120:4700\";\nconst urlWP = \"http://www.localkindle.com.br/netgift_api/wp-json/ntgift/api\";\n\nexport const FETCH_THEMES_BEGIN   = 'FETCH_THEMES_BEGIN';\nexport const FETCH_THEMES_SUCCESS = 'FETCH_THEMES_SUCCESS';\nexport const FETCH_THEME_SUCCESS = 'FETCH_THEME_SUCCESS';\nexport const FETCH_THEMES_FAILURE = 'FETCH_THEMES_FAILURE';\n\nexport function addThemes(values, history){\n\n    return async dispatch => {\n      var titulo_header_bold;\n      var titulo_header_itallic;\n      var titulo_header_underline;\n      var titulo_header_align;\n      var titulo_header_fontStyle;\n      var titulo_header_fontSize;\n      var titulo_header_fontColor;\n      var titulo_header_bgColor;\n      var categoria;\n      // if(values.tema_categoria == null || values.tema_categoria == \"\"){\n      //   categoria = 1\n      // }else{\n        categoria = values.tema_categoria\n      // }\n      // if(values.titulo_header_bold == null || values.titulo_header_bold == \"\"){\n      //   titulo_header_bold = false;\n      // }else{\n        titulo_header_bold = true;\n      // }\n      // if(values.titulo_header_itallic == null || values.titulo_header_itallic == \"\"){\n      //   titulo_header_itallic = false;\n      // }else{\n        titulo_header_itallic = true;\n      // }\n      // if(values.titulo_header_underline == null || values.titulo_header_underline == \"\"){\n      //   titulo_header_underline = false;\n      // }else{\n        titulo_header_underline = true;\n      // }\n      // if(values.titulo_header_titulo_header_align == null || values.titulo_header_titulo_header_align == \"\"){\n      //   titulo_header_align = \"center\";\n      // }\n      // if(values.titulo_header_fontStyle == null || values.titulo_header_fontStyle == \"\"){\n      //   titulo_header_fontStyle = \"Museo Sans\";\n      // }\n      // if(values.titulo_header_fontSize == null || values.titulo_header_fontSize == \"\"){\n      //   titulo_header_fontSize = \"48\";\n      // }\n      // if(values.titulo_header_fontColor == null || values.titulo_header_fontColor == \"\"){\n      //   titulo_header_fontColor = \"#000000\";\n      // }\n      // if(values.titulo_header_bgColor == null || values.titulo_header_bgColor == \"\"){\n      //   titulo_header_bgColor = \"#000000\";\n      // }\n      console.log(titulo_header_fontStyle)\n      axios.post(`${URL}/theme`, {\"name\": values.nome_tema, \"description\": values.descricao_tema, \"category_id\": categoria})\n      .then((res) => {\n        axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 1, \"value\": titulo_header_bold})\n        .then((res) => {\n          axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 2, \"value\": titulo_header_itallic})\n          .then((res) => {\n            axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 3, \"value\": titulo_header_underline})\n            .then((res) => {\n              axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 4, \"value\": titulo_header_align})\n              .then((response) => {\n                axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 5, \"value\": titulo_header_fontStyle})\n                .then((res) => {\n                  axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 6, \"value\": titulo_header_fontSize})\n                  .then((res) => {\n                    axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 7, \"value\": titulo_header_fontColor})\n                    .then((res) => {\n                      axios.post(`${URL}/theme/` + res.data.id + `/config`, {\"theme_ss_id\": 1, \"theme_feature_id\": 8, \"value\": titulo_header_bgColor})\n                      .then((res) => {\n                        console.log(res);\n                      })\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    }\n  \n}\n\nexport const fetchThemesBegin = () => ({\ntype: FETCH_THEMES_BEGIN\n});\n\nexport const fetchThemesSuccess = themes => ({\n    type: FETCH_THEMES_SUCCESS,\n    payload: { themes }\n});\n\nexport const fetchThemeSuccess = theme => ({\n  type: FETCH_THEME_SUCCESS,\n  payload: { theme }\n});\n\nexport const fetchThemesFailure = error => ({\n    type: FETCH_THEMES_FAILURE,\n    payload: { error }\n});\n\nexport function fetchThemes(){\n    return dispatch => {\n      dispatch(fetchThemesBegin());\n      return axios.post(`${URL}/theme/search`,{\"busca\": \"\"})\n        .then((response) => {\n          var {data} = response;\n          dispatch(fetchThemesSuccess(data[0]));\n          return data;\n        })\n        .catch(error => dispatch(fetchThemesFailure(error)));\n    }\n}\n\nexport function fetchTheme(id){\n  return dispatch => {\n    dispatch(fetchThemesBegin());\n    return axios.get(`${URL}/theme/` + id + `/config`)\n      .then((response) => {\n        var {data} = response;\n        dispatch(fetchThemeSuccess(data));\n        return data;\n      })\n      .catch(error => dispatch(fetchThemesFailure(error)));\n  }\n}"]},"metadata":{},"sourceType":"module"}