{"ast":null,"code":"import axios from \"axios\";\nimport { parse } from \"path\";\nexport const FETCH_USER_COUNT_BEGIN = 'FETCH_USER_COUNT_BEGIN';\nexport const FETCH_USER_COUNT_SUCCESS = 'FETCH_USER_COUNT_SUCCESS';\nexport const FETCH_USER_COUNT_FAILURE = 'FETCH_USER_COUNT_FAILURE';\nconst URL = \"http://51.15.99.120:4700\";\nconst config = {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\"\n  }\n};\nexport const fetchUserCountBegin = () => ({\n  type: FETCH_USER_COUNT_BEGIN\n});\nexport const fetchUserCountSuccess = user => ({\n  type: FETCH_USER_COUNT_SUCCESS,\n  payload: {\n    user\n  }\n});\nexport const fetchUserCountFailure = error => ({\n  type: FETCH_USER_COUNT_FAILURE,\n  payload: {\n    error\n  }\n});\nexport function fetchUserCount() {\n  return dispatch => {\n    dispatch(fetchUserCountBegin());\n    return axios.get(\"\".concat(URL, \"/count/users/1\"), config).then(response => {\n      var totalAtual = 0;\n      var totalPassado = 0;\n      let data = response.data;\n      let total = data.total;\n      totalAtual = total;\n      axios.get(\"\".concat(URL, \"/count/users/7\"), config).then(response => {\n        let data = response.data;\n        let total = data.total;\n        totalPassado = total;\n      });\n      dispatch(fetchUserCountSuccess(total));\n    }).catch(error => dispatch(fetchUserCountFailure(error)));\n  };\n}","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/actions/usersActions.js"],"names":["axios","parse","FETCH_USER_COUNT_BEGIN","FETCH_USER_COUNT_SUCCESS","FETCH_USER_COUNT_FAILURE","URL","config","headers","fetchUserCountBegin","type","fetchUserCountSuccess","user","payload","fetchUserCountFailure","error","fetchUserCount","dispatch","get","then","response","totalAtual","totalPassado","data","total","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAK,wBAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAK,0BAAnC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,MAAMC,GAAG,GAAK,0BAAd;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AAAC,mCAA+B,GAAhC;AAAqC,oCAAgC;AAArE;AADI,CAAf;AAIA,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEP;AADkC,CAAP,CAA5B;AAIP,OAAO,MAAMQ,qBAAqB,GAAGC,IAAI,KAAK;AAC5CF,EAAAA,IAAI,EAAEN,wBADsC;AAE5CS,EAAAA,OAAO,EAAE;AAACD,IAAAA;AAAD;AAFmC,CAAL,CAAlC;AAKP,OAAO,MAAME,qBAAqB,GAAGC,KAAK,KAAK;AAC7CL,EAAAA,IAAI,EAAEL,wBADuC;AAE7CQ,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFoC,CAAL,CAAnC;AAKP,OAAO,SAASC,cAAT,GAA0B;AAE/B,SAAOC,QAAQ,IAAI;AAEfA,IAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AAEF,WAAOR,KAAK,CAACiB,GAAN,WAAaZ,GAAb,qBAAkCC,MAAlC,EACJY,IADI,CACEC,QAAD,IAAc;AAClB,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,YAAY,GAAG,CAAnB;AAFkB,UAIbC,IAJa,GAILH,QAJK,CAIbG,IAJa;AAAA,UAKbC,KALa,GAKJD,IALI,CAKbC,KALa;AAMlBH,MAAAA,UAAU,GAAGG,KAAb;AACAvB,MAAAA,KAAK,CAACiB,GAAN,WAAaZ,GAAb,qBAAkCC,MAAlC,EACCY,IADD,CACOC,QAAD,IAAc;AAAA,YACbG,IADa,GACLH,QADK,CACbG,IADa;AAAA,YAEbC,KAFa,GAEJD,IAFI,CAEbC,KAFa;AAGlBF,QAAAA,YAAY,GAAGE,KAAf;AACD,OALD;AAMAP,MAAAA,QAAQ,CAACN,qBAAqB,CAACa,KAAD,CAAtB,CAAR;AACC,KAfE,EAgBJC,KAhBI,CAgBEV,KAAK,IAAIE,QAAQ,CAACH,qBAAqB,CAACC,KAAD,CAAtB,CAhBnB,CAAP;AAiBD,GArBD;AAsBD","sourcesContent":["import axios from \"axios\";\nimport { parse } from \"path\";\n\nexport const FETCH_USER_COUNT_BEGIN   = 'FETCH_USER_COUNT_BEGIN';\nexport const FETCH_USER_COUNT_SUCCESS   = 'FETCH_USER_COUNT_SUCCESS';\nexport const FETCH_USER_COUNT_FAILURE = 'FETCH_USER_COUNT_FAILURE';\n\nconst URL   = \"http://51.15.99.120:4700\";\n\nconst config = {\n  headers: {\"Access-Control-Allow-Origin\": \"*\", \"Access-Control-Allow-Headers\": \"*\"},\n}\n\nexport const fetchUserCountBegin = () => ({\n  type: FETCH_USER_COUNT_BEGIN\n});\n\nexport const fetchUserCountSuccess = user => ({\n  type: FETCH_USER_COUNT_SUCCESS,\n  payload: {user}\n});\n\nexport const fetchUserCountFailure = error => ({\n  type: FETCH_USER_COUNT_FAILURE,\n  payload: { error }\n});\n\nexport function fetchUserCount() {\n\n  return dispatch => {\n\n      dispatch(fetchUserCountBegin());\n\n    return axios.get(`${URL}/count/users/1`, config)\n      .then((response) => {\n        var totalAtual = 0;\n        var totalPassado = 0;\n\n        let {data} = response;\n        let {total} = data;\n        totalAtual = total;\n        axios.get(`${URL}/count/users/7`, config)\n        .then((response) => {\n          let {data} = response;\n          let {total} = data;\n          totalPassado = total;\n        })\n        dispatch(fetchUserCountSuccess(total))\n        })\n      .catch(error => dispatch(fetchUserCountFailure(error)));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}