{"ast":null,"code":"var _jsxFileName = \"/Users/rudolfo/Documents/projects/NetGift/src/components/Template.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchThemes } from \"../actions/themesActions\";\nimport { bgImage, bgColor, displayNone, defaultStyle, backgroundSize } from \"../components/styleFunctions\";\n\nclass Template extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: null,\n      thematic: null\n    };\n  }\n\n  componentDidMount() {\n    var category = null === this.state.category ? null : [this.state.category];\n    var thematic = null === this.state.thematic ? null : [this.state.thematic];\n    this.props.dispatch(fetchThemes(null, category, null, null, thematic));\n  }\n\n  getThemes() {\n    var category = null === this.state.category || \"null\" === this.state.category ? null : [parseInt(this.state.category)];\n    var thematic = null === this.state.thematic || \"null\" === this.state.thematic ? null : [parseInt(this.state.thematic)];\n    this.props.dispatch(fetchThemes(null, category, null, null, thematic));\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loading = _this$props.loading,\n          themes = _this$props.themes;\n    const items = themes.items;\n    var is_change = false;\n\n    if (this.state.category !== this.props.category_id) {\n      this.state.category = this.props.category_id;\n      is_change = true;\n    }\n\n    if (this.state.thematic !== this.props.thematic_id) {\n      this.state.thematic = this.props.thematic_id;\n      is_change = true;\n    }\n\n    if (is_change) {\n      this.getThemes();\n    }\n\n    console.log(items);\n    return React.createElement(\"div\", {\n      className: \"templates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, 0 !== items.length ? items.map(item => {\n      var bg_color = '';\n      var bg_img = '';\n\n      if (0 !== item.sessions[0].sub_sessions[5].features.length) {\n        item.sessions[0].sub_sessions[5].features.map(feature => {\n          if ('fundo_cor' === feature.name) {\n            bg_color = feature.value;\n          }\n\n          if ('imagem' === feature.name) {\n            bg_img = feature.value;\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"template\",\n        style: defaultStyle({\n          bgColor: bg_color,\n          backgroundImage: bg_img,\n          backgroundSize: \"contain\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, item.category_name), React.createElement(\"p\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, item.description), React.createElement(Link, {\n        to: \"/criarFesta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"gradient fullcolor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Criar festa\"))));\n    }) : \"Não foram encontrados templates com estas características\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  themes: state.themes\n});\n\nexport default connect(mapStateToProps)(Template);","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/components/Template.js"],"names":["React","Component","Link","connect","fetchThemes","bgImage","bgColor","displayNone","defaultStyle","backgroundSize","Template","state","category","thematic","componentDidMount","props","dispatch","getThemes","parseInt","render","error","loading","themes","items","is_change","category_id","thematic_id","console","log","length","map","item","bg_color","bg_img","sessions","sub_sessions","features","feature","name","value","backgroundImage","category_name","description","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchThemes } from \"../actions/themesActions\";\nimport {bgImage, bgColor, displayNone, defaultStyle, backgroundSize} from \"../components/styleFunctions\";\n\nclass Template extends Component {\n    componentDidMount(){\n        var category = null === this.state.category ? null : [this.state.category];\n        var thematic = null === this.state.thematic ? null : [this.state.thematic];\n\n        this.props.dispatch(fetchThemes( null, category, null, null, thematic ));\n    }\n\n    getThemes() {\n        var category = null === this.state.category || \"null\" === this.state.category ? null : [parseInt( this.state.category )];\n        var thematic = null === this.state.thematic || \"null\" === this.state.thematic ? null : [parseInt( this.state.thematic )];\n\n        this.props.dispatch(fetchThemes( null, category, null, null, thematic ));   \n    }\n\n    state = {\n        category: null,\n        thematic: null,\n    }\n\n    render() {\n        const { error, loading, themes } = this.props;\n        const {items} = themes;\n\n        var is_change = false;\n\n        if ( this.state.category !== this.props.category_id ) {\n            this.state.category = this.props.category_id;\n            is_change = true;\n        }\n\n        if ( this.state.thematic !== this.props.thematic_id ) {\n            this.state.thematic = this.props.thematic_id;\n            is_change = true;\n        }\n\n        if ( is_change ) {\n            this.getThemes();\n        }\n\n        console.log( items )\n\n        return (\n            <div className=\"templates\">\n                {\n                    0 !== items.length ?\n                    items.map((item) => {\n                        var bg_color = '';\n                        var bg_img   = '';\n                        if ( 0 !== item.sessions[0].sub_sessions[5].features.length ) {\n                            item.sessions[0].sub_sessions[5].features.map( ( feature, ) => {\n                                if ( 'fundo_cor' === feature.name ) {\n                                    bg_color = feature.value;\n                                }\n\n                                if ( 'imagem' === feature.name ) {\n                                    bg_img = feature.value;\n                                }\n                            });\n\n                        }\n                        return (\n                            <div className=\"template\" style={defaultStyle({bgColor: bg_color, backgroundImage: bg_img, backgroundSize: \"contain\"})}>\n                                <div className=\"info\">\n                                    <p className=\"title\">{item.category_name}</p>\n                                    <p className=\"desc\">{item.description}</p>\n                                    <Link to=\"/criarFesta\">\n                                        <button className=\"gradient fullcolor\">Criar festa</button>\n                                    </Link>\n                                </div>\n                            </div>\n                        )\n                    }) : \"Não foram encontrados templates com estas características\"\n                }\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    themes: state.themes\n})\n  \n\nexport default connect(mapStateToProps)(Template);"]},"metadata":{},"sourceType":"module"}