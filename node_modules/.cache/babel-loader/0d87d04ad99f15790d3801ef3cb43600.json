{"ast":null,"code":"/*!\r\n * Snackbar v0.1.14\r\n * http://polonel.com/Snackbar\r\n *\r\n * Copyright 2018 Chris Brame and other contributors\r\n * Released under the MIT license\r\n * https://github.com/polonel/Snackbar/blob/master/LICENSE\r\n */\n(function (root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return root.Snackbar = factory();\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = root.Snackbar = factory();\n  } else {\n    root.Snackbar = factory();\n  }\n})(this, function () {\n  var Snackbar = {};\n  Snackbar.current = null;\n  var $defaults = {\n    text: 'Default Text',\n    textColor: '#FFFFFF',\n    width: 'auto',\n    showAction: true,\n    actionText: 'Dismiss',\n    actionTextAria: 'Dismiss, Description for Screen Readers',\n    actionTextColor: '#4CAF50',\n    showSecondButton: false,\n    secondButtonText: '',\n    secondButtonAria: 'Description for Screen Readers',\n    secondButtonTextColor: '#4CAF50',\n    backgroundColor: '#323232',\n    pos: 'bottom-left',\n    duration: 5000,\n    customClass: '',\n    onActionClick: function (element) {\n      element.style.opacity = 0;\n    },\n    onSecondButtonClick: function (element) {},\n    onClose: function (element) {}\n  };\n\n  Snackbar.show = function ($options) {\n    var options = Extend(true, $defaults, $options);\n\n    if (Snackbar.current) {\n      Snackbar.current.style.opacity = 0;\n      setTimeout(function () {\n        var $parent = this.parentElement;\n        if ($parent) // possible null if too many/fast Snackbars\n          $parent.removeChild(this);\n      }.bind(Snackbar.current), 500);\n    }\n\n    Snackbar.snackbar = document.createElement('div');\n    Snackbar.snackbar.className = 'snackbar-container ' + options.customClass;\n    Snackbar.snackbar.style.width = options.width;\n    var $p = document.createElement('p');\n    $p.style.margin = 0;\n    $p.style.padding = 0;\n    $p.style.color = options.textColor;\n    $p.style.fontSize = '14px';\n    $p.style.fontWeight = 300;\n    $p.style.lineHeight = '1em';\n    $p.innerHTML = options.text;\n    Snackbar.snackbar.appendChild($p);\n    Snackbar.snackbar.style.background = options.backgroundColor;\n\n    if (options.showSecondButton) {\n      var secondButton = document.createElement('button');\n      secondButton.className = 'action';\n      secondButton.innerHTML = options.secondButtonText;\n      secondButton.setAttribute('aria-label', options.secondButtonAria);\n      secondButton.style.color = options.secondButtonTextColor;\n      secondButton.addEventListener('click', function () {\n        options.onSecondButtonClick(Snackbar.snackbar);\n      });\n      Snackbar.snackbar.appendChild(secondButton);\n    }\n\n    if (options.showAction) {\n      var actionButton = document.createElement('button');\n      actionButton.className = 'action';\n      actionButton.innerHTML = options.actionText;\n      actionButton.setAttribute('aria-label', options.actionTextAria);\n      actionButton.style.color = options.actionTextColor;\n      actionButton.addEventListener('click', function () {\n        options.onActionClick(Snackbar.snackbar);\n      });\n      Snackbar.snackbar.appendChild(actionButton);\n    }\n\n    if (options.duration) {\n      setTimeout(function () {\n        if (Snackbar.current === this) {\n          Snackbar.current.style.opacity = 0; // When natural remove event occurs let's move the snackbar to its origins\n\n          Snackbar.current.style.top = '-100px';\n          Snackbar.current.style.bottom = '-100px';\n        }\n      }.bind(Snackbar.snackbar), options.duration);\n    }\n\n    Snackbar.snackbar.addEventListener('transitionend', function (event, elapsed) {\n      if (event.propertyName === 'opacity' && this.style.opacity === '0') {\n        if (typeof options.onClose === 'function') options.onClose(this);\n        this.parentElement.removeChild(this);\n\n        if (Snackbar.current === this) {\n          Snackbar.current = null;\n        }\n      }\n    }.bind(Snackbar.snackbar));\n    Snackbar.current = Snackbar.snackbar;\n    document.body.appendChild(Snackbar.snackbar);\n    var $bottom = getComputedStyle(Snackbar.snackbar).bottom;\n    var $top = getComputedStyle(Snackbar.snackbar).top;\n    Snackbar.snackbar.style.opacity = 1;\n    Snackbar.snackbar.className = 'snackbar-container ' + options.customClass + ' snackbar-pos ' + options.pos;\n  };\n\n  Snackbar.close = function () {\n    if (Snackbar.current) {\n      Snackbar.current.style.opacity = 0;\n    }\n  }; // Pure JS Extend\n  // http://gomakethings.com/vanilla-javascript-version-of-jquery-extend/\n\n\n  var Extend = function () {\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    var length = arguments.length;\n\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    }\n\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = Extend(true, extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    };\n\n    for (; i < length; i++) {\n      var obj = arguments[i];\n      merge(obj);\n    }\n\n    return extended;\n  };\n\n  return Snackbar;\n});","map":null,"metadata":{},"sourceType":"script"}