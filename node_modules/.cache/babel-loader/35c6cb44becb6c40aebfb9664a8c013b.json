{"ast":null,"code":"var _jsxFileName = \"/Users/rudolfo/Documents/projects/NetGift/src/components/XMLGen.js\";\nimport React, { Component } from 'react';\n\nclass HtmlToXml extends Component {\n  export() {\n    var convert = require('xml-js');\n\n    console.log(this.props.confirmado);\n    var json = {\n      'Confirmados': this.props.confirmado,\n      'Retidos': this.props.retido,\n      'Receita': this.props.receita\n    };\n    var options = {\n      compact: true,\n      ignoreComment: true,\n      spaces: 4\n    };\n    var result = convert.json2xml(json, options);\n    var xmltext = result;\n    var pom = document.createElement('a');\n    var filename = \"Resumo-financeiro.xml\";\n    var pom = document.createElement('a');\n    var bb = new Blob([xmltext], {\n      type: 'text/plain'\n    });\n    pom.setAttribute('href', window.URL.createObjectURL(bb));\n    pom.setAttribute('download', filename);\n    pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n    pom.draggable = true;\n    pom.classList.add('dragout');\n    pom.click();\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      onClick: () => {\n        this.export();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Exportar extrato financeiro (XML)\");\n  }\n\n}\n\nexport default HtmlToXml;","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/components/XMLGen.js"],"names":["React","Component","HtmlToXml","export","convert","require","console","log","props","confirmado","json","retido","receita","options","compact","ignoreComment","spaces","result","json2xml","xmltext","pom","document","createElement","filename","bb","Blob","type","setAttribute","window","URL","createObjectURL","dataset","downloadurl","download","href","join","draggable","classList","add","click","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAGC,OAAO,CAAC,QAAD,CAArB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,KAAKC,KAAL,CAAWC,UAAxB;AAEA,QAAIC,IAAI,GAAG;AACT,qBAAe,KAAKF,KAAL,CAAWC,UADjB;AAET,iBAAW,KAAKD,KAAL,CAAWG,MAFb;AAGT,iBAAW,KAAKH,KAAL,CAAWI;AAHb,KAAX;AAKA,QAAIC,OAAO,GAAG;AAACC,MAAAA,OAAO,EAAE,IAAV;AAAgBC,MAAAA,aAAa,EAAE,IAA/B;AAAqCC,MAAAA,MAAM,EAAE;AAA7C,KAAd;AACA,QAAIC,MAAM,GAAGb,OAAO,CAACc,QAAR,CAAiBR,IAAjB,EAAuBG,OAAvB,CAAb;AAEA,QAAIM,OAAO,GAAGF,MAAd;AACA,QAAIG,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AAEA,QAAIC,QAAQ,GAAG,uBAAf;AACA,QAAIH,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAV;AACA,QAAIE,EAAE,GAAG,IAAIC,IAAJ,CAAS,CAACN,OAAD,CAAT,EAAoB;AAACO,MAAAA,IAAI,EAAE;AAAP,KAApB,CAAT;AAEAN,IAAAA,GAAG,CAACO,YAAJ,CAAiB,MAAjB,EAAyBC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BN,EAA3B,CAAzB;AACAJ,IAAAA,GAAG,CAACO,YAAJ,CAAiB,UAAjB,EAA6BJ,QAA7B;AAEAH,IAAAA,GAAG,CAACW,OAAJ,CAAYC,WAAZ,GAA0B,CAAC,YAAD,EAAeZ,GAAG,CAACa,QAAnB,EAA6Bb,GAAG,CAACc,IAAjC,EAAuCC,IAAvC,CAA4C,GAA5C,CAA1B;AACAf,IAAAA,GAAG,CAACgB,SAAJ,GAAgB,IAAhB;AACAhB,IAAAA,GAAG,CAACiB,SAAJ,CAAcC,GAAd,CAAkB,SAAlB;AAEAlB,IAAAA,GAAG,CAACmB,KAAJ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAG,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKrC,MAAL;AAAc,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF;AAGD;;AAlC+B;;AAqClC,eAAeD,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass HtmlToXml extends Component {\n  export() {\n    var convert = require('xml-js');\n    console.log( this.props.confirmado )\n\n    var json = {\n      'Confirmados': this.props.confirmado,\n      'Retidos': this.props.retido,\n      'Receita': this.props.receita,\n    }\n    var options = {compact: true, ignoreComment: true, spaces: 4};\n    var result = convert.json2xml(json, options);\n\n    var xmltext = result;\n    var pom = document.createElement('a');\n\n    var filename = \"Resumo-financeiro.xml\";\n    var pom = document.createElement('a');\n    var bb = new Blob([xmltext], {type: 'text/plain'});\n\n    pom.setAttribute('href', window.URL.createObjectURL(bb));\n    pom.setAttribute('download', filename);\n\n    pom.dataset.downloadurl = ['text/plain', pom.download, pom.href].join(':');\n    pom.draggable = true; \n    pom.classList.add('dragout');\n\n    pom.click();\n  }\n\n  render() {\n    return (\n      <a onClick={() => {this.export()}}>Exportar extrato financeiro (XML)</a>\n    );\n  }\n}\n\nexport default HtmlToXml;"]},"metadata":{},"sourceType":"module"}