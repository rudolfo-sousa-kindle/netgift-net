{"ast":null,"code":"var _jsxFileName = \"/Users/rudolfo/Documents/projects/NetGift/src/components/DashboardAdminHome.js\";\nimport React, { Component } from \"react\";\nimport setSelect2 from \"../assets/js/setSelect2\";\nimport { connect } from \"react-redux\";\nimport Extrato from \"./ExtratoAdmin\";\nimport GridCards from \"./GridCards\";\nimport { fetchUserCount } from \"../actions/usersActions\";\nimport { fetchUserSites } from \"../actions/usersActions\";\nimport $ from \"jquery\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.change = () => {\n      let periodo = $(\"#filter-date\").val();\n      console.log(periodo);\n      this.props.fetchUserSites();\n    };\n  }\n\n  componentDidMount() {\n    // setSelect2();\n    this.props.fetchUserCount(\"semanal\");\n    this.props.fetchUserSites(\"semanal\");\n  }\n\n  render() {\n    const _this$props$usersCoun = this.props.usersCount,\n          total = _this$props$usersCoun.total,\n          totalPassado = _this$props$usersCoun.totalPassado,\n          loading = _this$props$usersCoun.loading,\n          error = _this$props$usersCoun.error,\n          porcentagem = _this$props$usersCoun.porcentagem,\n          totalSites = _this$props$usersCoun.totalSites,\n          totalSitePassado = _this$props$usersCoun.totalSitePassado,\n          porcentagemSites = _this$props$usersCoun.porcentagemSites;\n    return React.createElement(\"div\", {\n      className: \"wrap-content home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex flex-baseline flex-space\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Voc\\xEA est\\xE1 no painel principal\")), React.createElement(\"div\", {\n      className: \"filter-admin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: () => this.change(),\n      name: \"filter_date\",\n      id: \"filter-date\",\n      className: \"select-filter-admin select-filter-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"diario\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Di\\xE1rio\"), React.createElement(\"option\", {\n      value: \"semanal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Semanal\"), React.createElement(\"option\", {\n      value: \"mensal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Mensal\"))))), React.createElement(\"div\", {\n      className: \"wrap-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(GridCards, {\n      totalUser: total,\n      totalUserPassado: totalPassado ? totalPassado : \"--\",\n      porcentagem: porcentagem ? porcentagem : \"--\",\n      totalSites: totalSites ? totalSites : \"--\",\n      totalSitePassado: totalSitePassado ? totalSitePassado : \"--\",\n      porcentagemSites: porcentagemSites ? porcentagemSites : \"--\",\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Extrato, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  extrato: state.extrato,\n  usersCount: state.usersCount\n});\n\nexport default connect(mapStateToProps, {\n  fetchUserCount,\n  fetchUserSites\n})(Dashboard);","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/components/DashboardAdminHome.js"],"names":["React","Component","setSelect2","connect","Extrato","GridCards","fetchUserCount","fetchUserSites","$","Dashboard","change","periodo","val","console","log","props","componentDidMount","render","usersCount","total","totalPassado","loading","error","porcentagem","totalSites","totalSitePassado","porcentagemSites","mapStateToProps","state","extrato"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AACA,SAAQC,cAAR,QAA6B,yBAA7B;AAEA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAQ5BS,MAR4B,GAQnB,MAAM;AACb,UAAIC,OAAO,GAAGH,CAAC,CAAC,cAAD,CAAD,CAAkBI,GAAlB,EAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,WAAKI,KAAL,CAAWR,cAAX;AACD,KAZ2B;AAAA;;AAE9BS,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKD,KAAL,CAAWT,cAAX,CAA0B,SAA1B;AACA,SAAKS,KAAL,CAAWR,cAAX,CAA0B,SAA1B;AACD;;AAQHU,EAAAA,MAAM,GAAG;AAAA,kCAEsG,KAAKF,KAAL,CAAWG,UAFjH;AAAA,UAEEC,KAFF,yBAEEA,KAFF;AAAA,UAESC,YAFT,yBAESA,YAFT;AAAA,UAEuBC,OAFvB,yBAEuBA,OAFvB;AAAA,UAEgCC,KAFhC,yBAEgCA,KAFhC;AAAA,UAEuCC,WAFvC,yBAEuCA,WAFvC;AAAA,UAEoDC,UAFpD,yBAEoDA,UAFpD;AAAA,UAEgEC,gBAFhE,yBAEgEA,gBAFhE;AAAA,UAEkFC,gBAFlF,yBAEkFA,gBAFlF;AAIL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,QAAQ,EAAE,MAAM,KAAKhB,MAAL,EAAxB;AAAuC,MAAA,IAAI,EAAC,aAA5C;AAA0D,MAAA,EAAE,EAAC,aAA7D;AAA2E,MAAA,SAAS,EAAC,wCAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ,CALJ,CADJ,CADJ,EAgBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAES,KADf;AAEI,MAAA,gBAAgB,EAAEC,YAAY,GAAGA,YAAH,GAAkB,IAFpD;AAGI,MAAA,WAAW,EAAEG,WAAW,GAAGA,WAAH,GAAiB,IAH7C;AAII,MAAA,UAAU,EAAEC,UAAU,GAAGA,UAAH,GAAgB,IAJ1C;AAKI,MAAA,gBAAgB,EAAEC,gBAAgB,GAAGA,gBAAH,GAAsB,IAL5D;AAMI,MAAA,gBAAgB,EAAEC,gBAAgB,GAAGA,gBAAH,GAAsB,IAN5D;AAOI,MAAA,OAAO,EAAEL,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,EA2BI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BJ,CADJ;AA+BH;;AAjD6B;;AAmDlC,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACC,OADe;AAE9BX,EAAAA,UAAU,EAAEU,KAAK,CAACV;AAFY,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACwB,eAAD,EAAkB;AAACrB,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAA2DE,SAA3D,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport setSelect2 from \"../assets/js/setSelect2\";\nimport { connect } from \"react-redux\";\nimport Extrato from \"./ExtratoAdmin\";\nimport GridCards from \"./GridCards\";\nimport {fetchUserCount} from \"../actions/usersActions\";\nimport {fetchUserSites} from \"../actions/usersActions\";\n\nimport $ from \"jquery\";\n\nclass Dashboard extends Component {\n\n    componentDidMount(){\n        // setSelect2();\n        this.props.fetchUserCount(\"semanal\");\n        this.props.fetchUserSites(\"semanal\");\n      }\n\n      change = () => {\n        let periodo = $(\"#filter-date\").val();\n        console.log(periodo)\n        this.props.fetchUserSites();\n      }\n\n    render() {\n\n        const {total, totalPassado, loading, error, porcentagem, totalSites, totalSitePassado, porcentagemSites} = this.props.usersCount;\n\n        return (\n            <div className=\"wrap-content home\">\n                <div className=\"content-title\">\n                    <div className=\"flex flex-baseline flex-space\">\n                        <div>\n                            <h1>Dashboard</h1>\n                            <h2>Você está no painel principal</h2>\n                        </div>\n                        <div className=\"filter-admin\">\n                            <select onChange={() => this.change()} name=\"filter_date\" id=\"filter-date\" className=\"select-filter-admin select-filter-date\">\n                                <option value=\"diario\">Diário</option>\n                                <option value=\"semanal\">Semanal</option>\n                                <option value=\"mensal\">Mensal</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"wrap-body\">\n                    <GridCards \n                        totalUser={total}\n                        totalUserPassado={totalPassado ? totalPassado : \"--\"}\n                        porcentagem={porcentagem ? porcentagem : \"--\"}\n                        totalSites={totalSites ? totalSites : \"--\"}\n                        totalSitePassado={totalSitePassado ? totalSitePassado : \"--\"}\n                        porcentagemSites={porcentagemSites ? porcentagemSites : \"--\"}\n                        loading={loading}\n                    />\n                </div>\n                <Extrato />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    extrato: state.extrato,\n    usersCount: state.usersCount\n  })\n\nexport default connect(mapStateToProps, {fetchUserCount, fetchUserSites})(Dashboard);"]},"metadata":{},"sourceType":"module"}