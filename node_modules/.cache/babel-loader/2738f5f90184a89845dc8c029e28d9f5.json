{"ast":null,"code":"import axios from \"axios\";\nimport { parse } from \"path\";\nexport const FETCH_VIEW_COUNT_BEGIN = 'FETCH_VIEW_COUNT_BEGIN';\nexport const FETCH_VIEW_COUNT_SUCCESS = 'FETCH_VIEW_COUNT_SUCCESS';\nexport const FETCH_VIEW_COUNT_FAILURE = 'FETCH_VIEW_COUNT_FAILURE';\nconst URL = \"http://51.15.99.120:4700\";\nconst config = {\n  headers: {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Headers\": \"*\"\n  }\n};\nexport const fetchViewCountBegin = () => ({\n  type: FETCH_VIEW_COUNT_BEGIN\n});\nexport const fetchViewCountSuccess = view => ({\n  type: FETCH_VIEW_COUNT_SUCCESS,\n  payload: {\n    view\n  }\n});\nexport const fetchViewCountFailure = error => ({\n  type: FETCH_VIEW_COUNT_FAILURE,\n  payload: {\n    error\n  }\n});\nexport function fetchViewCount() {\n  return dispatch => {\n    dispatch(fetchViewCountBegin());\n    return axios.get(\"\".concat(URL, \"/count/visits\"), config).then(response => {\n      var totalAtual = 0;\n      var totalPassado = 0;\n      var porcentagem = 0;\n      let data = response.data;\n      let total = data.total;\n      dispatch(fetchViewCountSuccess(total));\n      return total;\n    }).catch(error => dispatch(fetchViewCountFailure(error)));\n  };\n}","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/actions/viewsActions.js"],"names":["axios","parse","FETCH_VIEW_COUNT_BEGIN","FETCH_VIEW_COUNT_SUCCESS","FETCH_VIEW_COUNT_FAILURE","URL","config","headers","fetchViewCountBegin","type","fetchViewCountSuccess","view","payload","fetchViewCountFailure","error","fetchViewCount","dispatch","get","then","response","totalAtual","totalPassado","porcentagem","data","total","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAK,wBAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAK,0BAAnC;AACP,OAAO,MAAMC,wBAAwB,GAAG,0BAAjC;AAEP,MAAMC,GAAG,GAAK,0BAAd;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AAAC,mCAA+B,GAAhC;AAAqC,oCAAgC;AAArE;AADI,CAAf;AAIA,OAAO,MAAMC,mBAAmB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEP;AADkC,CAAP,CAA5B;AAIP,OAAO,MAAMQ,qBAAqB,GAAGC,IAAI,KAAI;AAC3CF,EAAAA,IAAI,EAAEN,wBADqC;AAE3CS,EAAAA,OAAO,EAAE;AAACD,IAAAA;AAAD;AAFkC,CAAJ,CAAlC;AAKP,OAAO,MAAME,qBAAqB,GAAGC,KAAK,KAAK;AAC7CL,EAAAA,IAAI,EAAEL,wBADuC;AAE7CQ,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAFoC,CAAL,CAAnC;AAKP,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAOC,QAAQ,IAAI;AAEjBA,IAAAA,QAAQ,CAACR,mBAAmB,EAApB,CAAR;AAEA,WAAOR,KAAK,CAACiB,GAAN,WAAaZ,GAAb,oBAAiCC,MAAjC,EACJY,IADI,CACEC,QAAD,IAAc;AAClB,UAAIC,UAAU,GAAG,CAAjB;AACA,UAAIC,YAAY,GAAG,CAAnB;AACA,UAAIC,WAAW,GAAG,CAAlB;AAHkB,UAKbC,IALa,GAKLJ,QALK,CAKbI,IALa;AAAA,UAMbC,KANa,GAMJD,IANI,CAMbC,KANa;AAOlBR,MAAAA,QAAQ,CAACN,qBAAqB,CAACc,KAAD,CAAtB,CAAR;AACA,aAAOA,KAAP;AACD,KAVI,EAUFC,KAVE,CAUIX,KAAK,IAAIE,QAAQ,CAACH,qBAAqB,CAACC,KAAD,CAAtB,CAVrB,CAAP;AAWD,GAfD;AAgBH","sourcesContent":["import axios from \"axios\";\nimport { parse } from \"path\";\n\nexport const FETCH_VIEW_COUNT_BEGIN   = 'FETCH_VIEW_COUNT_BEGIN';\nexport const FETCH_VIEW_COUNT_SUCCESS   = 'FETCH_VIEW_COUNT_SUCCESS';\nexport const FETCH_VIEW_COUNT_FAILURE = 'FETCH_VIEW_COUNT_FAILURE';\n\nconst URL   = \"http://51.15.99.120:4700\";\n\nconst config = {\n  headers: {\"Access-Control-Allow-Origin\": \"*\", \"Access-Control-Allow-Headers\": \"*\"},\n}\n\nexport const fetchViewCountBegin = () => ({\n  type: FETCH_VIEW_COUNT_BEGIN\n});\n\nexport const fetchViewCountSuccess = view=> ({\n  type: FETCH_VIEW_COUNT_SUCCESS,\n  payload: {view}\n});\n\nexport const fetchViewCountFailure = error => ({\n  type: FETCH_VIEW_COUNT_FAILURE,\n  payload: { error }\n});\n\nexport function fetchViewCount() {\n    return dispatch => {\n\n      dispatch(fetchViewCountBegin());\n\n      return axios.get(`${URL}/count/visits`, config)\n        .then((response) => {\n          var totalAtual = 0;\n          var totalPassado = 0;\n          var porcentagem = 0;\n\n          let {data} = response;\n          let {total} = data;\n          dispatch(fetchViewCountSuccess(total))\n          return total;\n        }).catch(error => dispatch(fetchViewCountFailure(error)));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}