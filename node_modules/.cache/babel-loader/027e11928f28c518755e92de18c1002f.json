{"ast":null,"code":"/*!\n  * fileup \n  * v0.0.1\n  * https://github.com/jgallen23/fileup\n  * copyright JGA 2011\n  * MIT License\n  */\n!function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition();else if (typeof define == 'function' && typeof define.amd == 'object') define(definition);else this[name] = definition();\n}('fileUp', function () {\n  var lastId = 0;\n\n  var addEvent = function (node, name, func) {\n    if (node.addEventListener) {\n      node.addEventListener(name, func, true);\n    } else if (node.attachEvent) {\n      name = \"on\" + name;\n      node.attachEvent(name, func);\n    }\n  };\n\n  var framejax = function (form, callback) {\n    var upload = function () {\n      var id = '__framejax__' + lastId++;\n      var iframe = document.createElement('iframe');\n      iframe.name = id;\n      iframe.id = id;\n      iframe.width = \"0\";\n      iframe.height = \"0\";\n      iframe.style.display = \"none\";\n      form.target = id;\n\n      var done = function () {\n        var iframe = document.getElementById(id);\n        var doc = null;\n        if (iframe.contentDocument) doc = iframe.contentDocument;\n        if (iframe.contentWindow) doc = iframe.contentWindow.document;\n        callback(doc.body.innerHTML);\n      };\n\n      addEvent(iframe, 'load', done);\n      document.body.appendChild(iframe);\n    };\n\n    addEvent(form, 'submit', upload);\n    return function () {\n      upload();\n      form.submit();\n    };\n  };\n\n  var FileUploader = function (el) {\n    this.el = el;\n    this.addForm();\n\n    this.onStart = function () {};\n\n    this.onComplete = function () {};\n\n    addEvent(el, 'mousemove', this.proxy(this.overlayInput));\n    return this;\n  };\n\n  FileUploader.prototype.action = function (url) {\n    this.form.action = url;\n    return this;\n  };\n\n  FileUploader.prototype.start = function (f) {\n    this.onStart = f;\n    return this;\n  };\n\n  FileUploader.prototype.complete = function (f) {\n    this.onComplete = f;\n    return this;\n  };\n\n  FileUploader.prototype.proxy = function (func) {\n    var obj = this;\n    return function () {\n      if (!func) return;\n      return func.apply(obj, arguments);\n    };\n  };\n\n  FileUploader.prototype.overlayInput = function (e) {\n    if (typeof e == 'undefined') e = window.event;\n\n    if (typeof e.pageY == 'undefined' && typeof e.clientX == 'number' && document.documentElement) {\n      e.pageX = e.clientX + document.documentElement.scrollLeft;\n      e.pageY = e.clientY + document.documentElement.scrollTop;\n    }\n\n    var ox = oy = 0;\n    var elem = this;\n\n    if (elem.offsetParent) {\n      ox = elem.offsetLeft;\n      oy = elem.offsetTop;\n\n      while (elem = elem.offsetParent) {\n        ox += elem.offsetLeft;\n        oy += elem.offsetTop;\n      }\n\n      ;\n    }\n\n    ;\n    var x = e.pageX - ox;\n    var y = e.pageY - oy;\n    var w = this.input.offsetWidth;\n    var h = this.input.offsetHeight;\n    this.input.style.top = y - h / 2 + 'px';\n    this.input.style.left = x - (w - 30) + 'px';\n  };\n\n  FileUploader.prototype.addForm = function () {\n    this.form = document.createElement('form');\n    this.form.action = window.location.href;\n    this.form.method = \"POST\";\n    this.form.enctype = \"multipart/form-data\";\n    this.input = document.createElement('input');\n    this.input.style.position = \"absolute\";\n    this.input.name = 'file';\n    this.input.type = 'file'; //TODO: filter for ie\n\n    this.input.style.opacity = \"0\";\n    this.input.style.cursor = \"pointer\";\n    addEvent(this.input, 'change', this.proxy(this.fileSelected));\n    this.form.appendChild(this.input);\n    document.body.appendChild(this.form);\n    this.submit = framejax(this.form, this.proxy(this._uploadComplete));\n  };\n\n  FileUploader.prototype._uploadComplete = function (file) {\n    this.onComplete(file);\n  };\n\n  FileUploader.prototype.fileSelected = function () {\n    this.onStart();\n    this.submit();\n  };\n\n  var fileUp = function (triggerNode) {\n    return new FileUploader(triggerNode);\n  };\n\n  return fileUp;\n});","map":null,"metadata":{},"sourceType":"script"}