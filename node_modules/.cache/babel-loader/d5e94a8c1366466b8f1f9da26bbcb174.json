{"ast":null,"code":"import _objectSpread from \"/Users/rudolfo/Documents/projects/NetGift/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { FETCH_USER_COUNT_BEGIN, FETCH_USER_COUNT_SUCCESS, FETCH_USER_COUNT_SITES_SUCCESS, FETCH_USER_COUNT_PASSADO_SUCCESS, FETCH_USER_COUNT_SITES_PASSADO_SUCCESS, FETCH_USER_COUNT_FAILURE } from '../actions/usersActions';\nconst initialState = {\n  total: [],\n  totalPassado: [],\n  loading: true,\n  error: null\n};\nexport default function productReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_USER_COUNT_BEGIN:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FETCH_USER_COUNT_FAILURE:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload.error,\n        total: []\n      });\n\n    case FETCH_USER_COUNT_PASSADO_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        totalPassado: action.payload.sitesPassado,\n        porcentagem: action.porcentagem.porcentagem\n      });\n\n    case FETCH_USER_COUNT_SITES_PASSADO_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: null,\n        totalPassado: action.payload.userPassado,\n        porcentagemSites: action.porcentagem.porcentagem\n      });\n\n    case FETCH_USER_COUNT_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        total: action.payload.user\n      });\n\n    case FETCH_USER_COUNT_SITES_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        totalSites: action.payload.sites\n      });\n\n    default:\n      // ALWAYS have a default case in a reducer\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/rudolfo/Documents/projects/NetGift/src/reducers/usersReducer.js"],"names":["FETCH_USER_COUNT_BEGIN","FETCH_USER_COUNT_SUCCESS","FETCH_USER_COUNT_SITES_SUCCESS","FETCH_USER_COUNT_PASSADO_SUCCESS","FETCH_USER_COUNT_SITES_PASSADO_SUCCESS","FETCH_USER_COUNT_FAILURE","initialState","total","totalPassado","loading","error","productReducer","state","action","type","payload","sitesPassado","porcentagem","userPassado","porcentagemSites","user","totalSites","sites"],"mappings":";AAAA,SACIA,sBADJ,EAEIC,wBAFJ,EAGIC,8BAHJ,EAIIC,gCAJJ,EAKIC,sCALJ,EAMIC,wBANJ,QAOO,yBAPP;AASE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGN,YAAhC,EAA8CO,MAA9C,EAAsD;AACnE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,sBAAL;AACE,+BACKY,KADL;AAEEH,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAKJ,wBAAL;AACE,+BACOO,KADP;AAEIH,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAAP,CAAeL,KAH1B;AAIIH,QAAAA,KAAK,EAAE;AAJX;;AAOF,SAAKJ,gCAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAE,IAHT;AAIEF,QAAAA,YAAY,EAAEK,MAAM,CAACE,OAAP,CAAeC,YAJ/B;AAKEC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAAP,CAAmBA;AALlC;;AAQA,SAAKb,sCAAL;AACA,+BACKQ,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,KAAK,EAAE,IAHT;AAIEF,QAAAA,YAAY,EAAEK,MAAM,CAACE,OAAP,CAAeG,WAJ/B;AAKEC,QAAAA,gBAAgB,EAAEN,MAAM,CAACI,WAAP,CAAmBA;AALvC;;AAQF,SAAKhB,wBAAL;AACE,+BACOW,KADP;AAEIH,QAAAA,OAAO,EAAE,KAFb;AAGIF,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeK;AAH1B;;AAMF,SAAKlB,8BAAL;AACE,+BACKU,KADL;AAEEH,QAAAA,OAAO,EAAE,KAFX;AAGEY,QAAAA,UAAU,EAAER,MAAM,CAACE,OAAP,CAAeO;AAH7B;;AAOF;AACE;AACA,aAAOV,KAAP;AAlDJ;AAoDD","sourcesContent":["import {\n    FETCH_USER_COUNT_BEGIN,\n    FETCH_USER_COUNT_SUCCESS,\n    FETCH_USER_COUNT_SITES_SUCCESS,\n    FETCH_USER_COUNT_PASSADO_SUCCESS,\n    FETCH_USER_COUNT_SITES_PASSADO_SUCCESS,\n    FETCH_USER_COUNT_FAILURE\n} from '../actions/usersActions';\n  \n  const initialState = {\n    total: [],\n    totalPassado: [],\n    loading: true,\n    error: null\n  };\n\n  export default function productReducer(state = initialState, action) {\n    switch(action.type) {\n      case FETCH_USER_COUNT_BEGIN:\n        return{\n          ...state,\n          loading: true\n        };\n  \n      case FETCH_USER_COUNT_FAILURE:\n        return {\n            ...state,\n            loading: false,\n            error: action.payload.error,\n            total: []\n          };\n\n      case FETCH_USER_COUNT_PASSADO_SUCCESS:\n        return{\n          ...state,\n          loading: false,\n          error: null,\n          totalPassado: action.payload.sitesPassado,\n          porcentagem: action.porcentagem.porcentagem,\n        }\n\n        case FETCH_USER_COUNT_SITES_PASSADO_SUCCESS:\n        return{\n          ...state,\n          loading: false,\n          error: null,\n          totalPassado: action.payload.userPassado,\n          porcentagemSites: action.porcentagem.porcentagem,\n        }\n  \n      case FETCH_USER_COUNT_SUCCESS:\n        return {\n            ...state,\n            loading: false,\n            total: action.payload.user\n          };\n\n      case FETCH_USER_COUNT_SITES_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          totalSites: action.payload.sites\n        }    \n        \n  \n      default:\n        // ALWAYS have a default case in a reducer\n        return state;\n    }\n  }"]},"metadata":{},"sourceType":"module"}